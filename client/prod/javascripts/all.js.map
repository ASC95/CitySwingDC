{"version":3,"sources":["nav.js","slideshow.js","execute.js"],"names":["window","Nav_controller","this","menu","document","getElementsByClassName","body","toggle_menu_visibility","dataset","display","addEventListener","bind","Slideshow","set_active_item","slideshow","active_button","className","slideshow_item","slideshow_scope","buttons","slideshow_items","length","Error","i","factory"],"mappings":"aACAA,OAAAC,eAGA,WAEAC,KAAAC,KAAAC,SAAAC,uBAAA,aAAA,GACAH,KAAAI,KAAAF,SAAAE,KACAJ,KAAAK,uBAAA,WACA,WAAAL,KAAAC,KAAAK,QAAAC,SACAP,KAAAC,KAAAK,QAAAC,QAAA,GACAP,KAAAI,KAAAE,QAAAC,QAAA,WAEAP,KAAAC,KAAAK,QAAAC,QAAA,SACAP,KAAAI,KAAAE,QAAAC,QAAA,KAGAL,SAAAC,uBAAA,WAAA,GAAAK,iBACA,QAbAR,KAcAK,uBAAAI,KAdAT,QCJAF,OAAAY,UACA,WAOA,SAAAC,EAAAC,GACAA,EAAAC,cAAAC,UAAA,oBACAF,EAAAC,cAAAE,eAAAD,UAAA,kBACAF,EAAAC,cAAAb,KACAA,KAAAc,WAAA,6BACAd,KAAAe,eAAAD,WAAA,2BA4BA,OArBA,WACA,IAAAE,EAAAhB,KAEA,GADAA,KAAAa,cAAAX,SAAAC,uBAAA,6BAAA,GACAH,KAAAa,cAAA,CACAb,KAAAiB,QAAAf,SAAAC,uBAAA,qBACAH,KAAAkB,gBAAAhB,SAAAC,uBAAA,mBACA,IAAAgB,EAAAnB,KAAAiB,QAAAE,OACA,GAAAA,IAAAnB,KAAAkB,gBAAAC,OACA,MAAA,IAAAC,MAAA,gDAEA,IAAA,IAAAC,EAAA,EAAAA,EAAAF,EAAAE,IACArB,KAAAiB,QAAAI,GAAAN,eAAAf,KAAAkB,gBAAAG,GACArB,KAAAiB,QAAAI,GAAAb,iBAAA,QAAA,WAGAG,EAAAF,KAAAT,KAAAW,CAAAK,OAnCAM,GCAA,IAAAvB,eACA,IAAAW","file":"all.js","sourcesContent":["(factory => {\n  window.Nav_controller = factory();\n})(() => {\n  'use strict';\n  function Nav_controller() {\n    const nav_context = this;\n    this.menu = document.getElementsByClassName('nav__menu')[0];\n    this.body = document.body;\n    this.toggle_menu_visibility = function() {\n      if (this.menu.dataset.display === 'hidden') {\n        this.menu.dataset.display = ''; \n        this.body.dataset.display = 'hidden';\n      } else {\n        this.menu.dataset.display = 'hidden';\n        this.body.dataset.display = '';\n      }\n    }\n    document.getElementsByClassName('fa-bars')[0].addEventListener(\n      'click',\n      nav_context.toggle_menu_visibility.bind(nav_context)\n    );\n  }\n  \n  return Nav_controller;\n});\n","(factory => {\n  window.Slideshow = factory();\n})(() => {\n  'use strict';\n\n  /** Resets the classes of the previously active button and slideshow item, then makes the current\n  * button and its associated item active.\n  * @param {Slideshow} slideshow - The Slideshow object's context\n  */\n  function set_active_item(slideshow) {\n    slideshow.active_button.className = 'slideshow__button';\n    slideshow.active_button.slideshow_item.className = 'slideshow__item';\n    slideshow.active_button = this;\n    this.className += ' slideshow__button--active'; \n    this.slideshow_item.className += ' slideshow__item--active';\n  }\n\n  /**Creates a Slideshow. Apparently if a Slideshow is garbage collected, then the event listeners\n  * on its buttons are also garbage collected.\n  * @constructor\n  */\n  let Slideshow = function() {\n    const slideshow_scope = this;\n    this.active_button = document.getElementsByClassName('slideshow__button--active')[0];\n    if (this.active_button) {\n      this.buttons = document.getElementsByClassName('slideshow__button');\n      this.slideshow_items = document.getElementsByClassName('slideshow__item');\n      const length = this.buttons.length;\n      if (length !== this.slideshow_items.length) {\n        throw new Error('The number of buttons and items should match');\n      }\n      for (let i = 0; i < length; i++) {\n        this.buttons[i].slideshow_item = this.slideshow_items[i]; \n        this.buttons[i].addEventListener('click', function() {\n          /* 'this' in this function declaration context \n          is the button that is having the event listener registered on it */\n          set_active_item.bind(this)(slideshow_scope);\n        });\n      }\n    }\n  }\n\n  return Slideshow;\n});\n","'use strict';\nnew Nav_controller();\nnew Slideshow();\n"]}