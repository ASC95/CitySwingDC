{"version":3,"sources":["fb.js"],"names":["window","FB_request","factory","httpRequest","XMLHttpRequest","alert","onreadystatechange","readyState","status","append_posts","responseText","open","send","tryParseJSON","jsonString","o","JSON","parse","e","undefined","json","document","getElementsByClassName","style","display","post_container","data","post","display_post","post_data","author","createElement","className","appendChild","createTextNode","from","name","text","message"],"mappings":";;;;AAAA,CAAC,mBAAW;AACVA,SAAOC,UAAP,GAAoBC,SAApB;AACD,CAFD,EAEG,YAAM;AACP;;AACA,WAASD,UAAT,GAAsB;AACpB;AACA,QAAME,cAAc,IAAIC,cAAJ,EAApB;AACA,QAAI,CAACD,WAAL,EAAkB;AAChBE,YAAM,8CAAN;AACA,aAAO,KAAP;AACD;AACDF,gBAAYG,kBAAZ,GAAiC,YAAM;AACrC,UAAIH,YAAYI,UAAZ,KAA2B,CAA/B,EAAkC;AAChC,YAAIJ,YAAYK,MAAZ,KAAuB,GAA3B,EAAgC;AAC9B;AACA;AACAC,uBAAaN,YAAYO,YAAzB;AACD,SAJD,MAIO;AACLL,gBAAM,wDACNF,YAAYK,MADN,GACe,oBADf,GACsCL,YAAYI,UADxD;AAEAF,gBAAMF,YAAYO,YAAlB;AACD;AACF;AACF,KAZD;AAaAP,gBAAYQ,IAAZ,CAAiB,KAAjB,EAAwB,8CAAxB;AACAR,gBAAYS,IAAZ;AACD;;AAED;AACA,WAASC,YAAT,CAAuBC,UAAvB,EAAkC;AAChC,QAAI;AACF,UAAIC,IAAIC,KAAKC,KAAL,CAAWH,UAAX,CAAR;AACA,UAAIC,KAAK,QAAOA,CAAP,yCAAOA,CAAP,OAAa,QAAtB,EAAgC;AAC9B,eAAOA,CAAP;AACD;AACF,KALD,CAMA,OAAOG,CAAP,EAAU,CAAG;AACb,WAAOC,SAAP;AACD;;AAED,WAASV,YAAT,CAAsBW,IAAtB,EAA4B;AAC1BC,aAASC,sBAAT,CAAgC,SAAhC,EAA2C,CAA3C,EAA8CC,KAA9C,CAAoDC,OAApD,GAA8D,OAA9D;AACA,QAAI;AACF,UAAMC,iBAAiBT,KAAKC,KAAL,CAAWG,IAAX,CAAvB;AACA;AACA;AAHE;AAAA;AAAA;;AAAA;AAIF,6BAAiBK,eAAeC,IAAhC,8HAAsC;AAAA,cAA7BC,IAA6B;;AACpCC,uBAAaD,IAAb;AACD;AANC;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAOH,KAPD,CAOE,OAAOT,CAAP,EAAU,CAEX;AACF;;AAED,WAASU,YAAT,CAAsBC,SAAtB,EAAiC;AAC/B,QAAMC,SAAST,SAASU,aAAT,CAAuB,GAAvB,CAAf;AACAD,WAAOE,SAAP,GAAmB,iBAAnB;AACAF,WAAOG,WAAP,CAAmBZ,SAASa,cAAT,CAAwBL,UAAUM,IAAV,CAAeC,IAAvC,CAAnB;AACA,QAAMC,OAAOhB,SAASU,aAAT,CAAuB,GAAvB,CAAb;AACAM,SAAKL,SAAL,GAAiB,eAAjB;AACAK,SAAKJ,WAAL,CAAiBZ,SAASa,cAAT,CAAwBL,UAAUS,OAAlC,CAAjB;AACA,QAAMX,OAAON,SAASU,aAAT,CAAuB,SAAvB,CAAb;AACAJ,SAAKK,SAAL,GAAiB,SAAjB;AACAL,SAAKM,WAAL,CAAiBH,MAAjB;AACAH,SAAKM,WAAL,CAAiBI,IAAjB;AACAhB,aAASC,sBAAT,CAAgC,kBAAhC,EAAoD,CAApD,EAAuDW,WAAvD,CAAmEN,IAAnE;AACD;AACD,SAAO1B,UAAP;AACD,CApED;AAqEAA","file":"fb.js","sourcesContent":["(factory => {\n  window.FB_request = factory();\n})(() => {\n  'use strict';\n  function FB_request() {\n    // Taken from https://developer.mozilla.org/en-US/docs/Web/Guide/AJAX/Getting_Started\n    const httpRequest = new XMLHttpRequest();\n    if (!httpRequest) {\n      alert('Giving up. Cannot create an XMLHTTP instance');\n      return false;\n    }\n    httpRequest.onreadystatechange = () => {  \n      if (httpRequest.readyState === 4) {\n        if (httpRequest.status === 200) {\n          //alert(httpRequest.responseText);\n          //document.getElementsByClassName('fb_post__text')[0].innerHTML = httpRequest.responseText;\n          append_posts(httpRequest.responseText);\n        } else {\n          alert('There was a problem with the request. HTTP status: ' + \n          httpRequest.status + ' HTTP readyState: ' + httpRequest.readyState);\n          alert(httpRequest.responseText);\n        }\n      }\n    };\n    httpRequest.open('GET', 'http://localhost:5000/schedule/announcements');\n    httpRequest.send();\n  }\n\n  // See: https://stackoverflow.com/questions/3710204/how-to-check-if-a-string-is-a-valid-json-string-in-javascript-without-using-try/3710226\n  function tryParseJSON (jsonString){\n    try {\n      var o = JSON.parse(jsonString);\n      if (o && typeof o === \"object\") {\n        return o;\n      }\n    }\n    catch (e) { }\n    return undefined;\n  };\n\n  function append_posts(json) {\n    document.getElementsByClassName('fb_feed')[0].style.display = 'block';\n    try {\n      const post_container = JSON.parse(json);\n      //console.log(post_container);\n      // Iterating over an array of objects\n      for (let post of post_container.data) {\n        display_post(post);\n      }\n    } catch (e) {\n      \n    }\n  }\n\n  function display_post(post_data) {\n    const author = document.createElement('p');\n    author.className = 'fb_post__author';\n    author.appendChild(document.createTextNode(post_data.from.name));\n    const text = document.createElement('p');\n    text.className = 'fb_post__text';\n    text.appendChild(document.createTextNode(post_data.message));\n    const post = document.createElement('article'); \n    post.className = 'fb_post';\n    post.appendChild(author);\n    post.appendChild(text);\n    document.getElementsByClassName('fb_feed__content')[0].appendChild(post);     \n  }\n  return FB_request;\n});\nFB_request();\n"]}